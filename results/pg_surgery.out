create extension pg_surgery;
--
-- check that using heap_force_kill and heap_force_freeze functions with the
-- supported relations passes.
--
-- normal heap table.
begin;
create table htab(a int);
insert into htab values (100), (200), (300), (400), (500);
select * from htab where xmin = 2;
 a 
---
(0 rows)

select heap_force_freeze('htab'::regclass, ARRAY['(0, 4)']::tid[]);
 heap_force_freeze 
-------------------
 
(1 row)

select ctid, xmax from htab where xmin = 2;
 ctid  | xmax 
-------+------
 (0,4) |    0
(1 row)

select heap_force_kill('htab'::regclass, ARRAY['(0, 4)']::tid[]);
 heap_force_kill 
-----------------
 
(1 row)

select * from htab where ctid = '(0, 4)';
 a 
---
(0 rows)

rollback;
-- materialized view.
begin;
create materialized view mvw as select a from generate_series(1, 3) a;
select * from mvw where xmin = 2;
 a 
---
(0 rows)

select heap_force_freeze('mvw'::regclass, ARRAY['(0, 3)']::tid[]);
 heap_force_freeze 
-------------------
 
(1 row)

select * from mvw where xmin = 2;
 a 
---
 3
(1 row)

select heap_force_kill('mvw'::regclass, ARRAY['(0, 3)']::tid[]);
 heap_force_kill 
-----------------
 
(1 row)

select * from mvw where ctid = '(0, 3)';
 a 
---
(0 rows)

rollback;
--
-- check that using heap_force_kill and heap_force_freeze functions with the
-- unsupported relations fails.
--
-- partitioned tables (the parent table) doesn't contain any tuple.
create table ptab (a int) partition by list (a);
select heap_force_kill('ptab'::regclass, ARRAY['(0, 1)']::tid[]);
ERROR:  "ptab" is not a table, materialized view, or TOAST table
select heap_force_freeze('ptab'::regclass, ARRAY['(0, 1)']::tid[]);
ERROR:  "ptab" is not a table, materialized view, or TOAST table
create index ptab_idx on ptab (a);
-- indexes are not supported, should fail.
select heap_force_kill('ptab_idx'::regclass, ARRAY['(0, 1)']::tid[]);
ERROR:  "ptab_idx" is not a table, materialized view, or TOAST table
select heap_force_freeze('ptab_idx'::regclass, ARRAY['(0, 1)']::tid[]);
ERROR:  "ptab_idx" is not a table, materialized view, or TOAST table
create view vw as select 1;
-- views are not supported as well. so, all these should fail.
select heap_force_kill('vw'::regclass, ARRAY['(0, 1)']::tid[]);
ERROR:  "vw" is not a table, materialized view, or TOAST table
select heap_force_freeze('vw'::regclass, ARRAY['(0, 1)']::tid[]);
ERROR:  "vw" is not a table, materialized view, or TOAST table
create sequence seq;
-- sequences are not supported as well. so, all these functions should fail.
select heap_force_kill('seq'::regclass, ARRAY['(0, 1)']::tid[]);
ERROR:  "seq" is not a table, materialized view, or TOAST table
select heap_force_freeze('seq'::regclass, ARRAY['(0, 1)']::tid[]);
ERROR:  "seq" is not a table, materialized view, or TOAST table
--
-- Some negative test-cases with invalid inputs.
--
begin;
create table htab(a int);
-- invalid block number, should be skipped.
select heap_force_kill('htab'::regclass, ARRAY['(0, 1)']::tid[]);
NOTICE:  skipping block 0 for relation "htab" because the block number is out of range
 heap_force_kill 
-----------------
 
(1 row)

select heap_force_freeze('htab'::regclass, ARRAY['(0, 1)']::tid[]);
NOTICE:  skipping block 0 for relation "htab" because the block number is out of range
 heap_force_freeze 
-------------------
 
(1 row)

insert into htab values (10);
-- invalid offset number, should be skipped.
select heap_force_kill('htab'::regclass, ARRAY['(0, 2)']::tid[]);
NOTICE:  skipping tid (0, 2) for relation "htab" because the item number is out of range for this block
 heap_force_kill 
-----------------
 
(1 row)

select heap_force_freeze('htab'::regclass, ARRAY['(0, 2)']::tid[]);
NOTICE:  skipping tid (0, 2) for relation "htab" because the item number is out of range for this block
 heap_force_freeze 
-------------------
 
(1 row)

-- dead tuple, should be skipped.
select heap_force_kill('htab'::regclass, ARRAY['(0, 1)']::tid[]);
 heap_force_kill 
-----------------
 
(1 row)

select heap_force_kill('htab'::regclass, ARRAY['(0, 1)']::tid[]);
NOTICE:  skipping tid (0, 1) for relation "htab" because it is marked dead
 heap_force_kill 
-----------------
 
(1 row)

select heap_force_freeze('htab'::regclass, ARRAY['(0, 1)']::tid[]);
NOTICE:  skipping tid (0, 1) for relation "htab" because it is marked dead
 heap_force_freeze 
-------------------
 
(1 row)

rollback;
-- cleanup.
drop table ptab;
drop view vw;
drop sequence seq;
drop extension pg_surgery;
